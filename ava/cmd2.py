import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(page_title="SCADA Command Dashboard", layout="wide")

st.title("ЁЯУК SCADA Device Command Summary Dashboard")

# --- Upload Excel ---
uploaded_file = st.file_uploader("ЁЯУе Upload Excel File", type=["xlsx"])
if uploaded_file:
    sheet_names = pd.ExcelFile(uploaded_file).sheet_names
    sheet = st.selectbox("р╣Ар╕ер╕╖р╕нр╕Б Sheet", sheet_names)
    df = pd.read_excel(uploaded_file, sheet_name=sheet)

    # --- User selects columns ---
    col_device = st.selectbox("р╣Ар╕ер╕╖р╕нр╕Бр╕Др╕нр╕ер╕▒р╕бр╕Щр╣Мр╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣М (Device)", df.columns)
    col_total = st.selectbox("р╣Ар╕ер╕╖р╕нр╕Бр╕Др╕нр╕ер╕▒р╕бр╕Щр╣М 'р╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф'", df.columns)
    col_success = st.selectbox("р╣Ар╕ер╕╖р╕нр╕Бр╕Др╕нр╕ер╕▒р╕бр╕Щр╣М 'р╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕кр╕│р╣Ар╕гр╣Зр╕И'", df.columns)

    # --- Rename & clean ---
    df = df[[col_device, col_total, col_success]].copy()
    df.columns = ["Device", "р╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф", "р╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕кр╕│р╣Ар╕гр╣Зр╕И"]

    # --- р╕Др╕│р╕Щр╕зр╕У % р╕кр╕│р╣Ар╕гр╣Зр╕И р╣Бр╕ер╕░р╕нр╕▒р╕Щр╕Фр╕▒р╕Ъ ---
    df_summary = df.groupby("Device").agg({
        "р╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф": "sum",
        "р╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕кр╕│р╣Ар╕гр╣Зр╕И": "sum"
    }).reset_index()

    df_summary["% р╕Бр╕▓р╕гр╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕кр╕│р╣Ар╕гр╣Зр╕И"] = (df_summary["р╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕кр╕│р╣Ар╕гр╣Зр╕И"] / df_summary["р╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф"]) * 100
    df_summary["р╕нр╕▒р╕Щр╕Фр╕▒р╕Ър╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф"] = df_summary["р╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф"].rank(ascending=False, method='min')
    df_summary["р╕нр╕▒р╕Щр╕Фр╕▒р╕Ъ % р╕кр╕│р╣Ар╕гр╣Зр╕И"] = df_summary["% р╕Бр╕▓р╕гр╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕кр╕│р╣Ар╕гр╣Зр╕И"].rank(ascending=False, method='min')

    df_summary["р╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф"] = df_summary["р╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф"].astype(int)
    df_summary["р╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕кр╕│р╣Ар╕гр╣Зр╕И"] = df_summary["р╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕кр╕│р╣Ар╕гр╣Зр╕И"].astype(int)
    df_summary["% р╕Бр╕▓р╕гр╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕кр╕│р╣Ар╕гр╣Зр╕И"] = df_summary["% р╕Бр╕▓р╕гр╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕кр╕│р╣Ар╕гр╣Зр╕И"].round(2)

    # --- р╣Бр╕кр╕Фр╕Зр╕Хр╕▓р╕гр╕▓р╕Зр╕Ир╕▒р╕Фр╕нр╕▒р╕Щр╕Фр╕▒р╕Ъ ---
    st.markdown("## ЁЯПЖ р╕Ир╕▒р╕Фр╕нр╕▒р╕Щр╕Фр╕▒р╕Ър╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣Мр╕Хр╕▓р╕бр╕Бр╕▓р╕гр╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕г")

    df_sorted_total = df_summary.sort_values(by="р╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф", ascending=False)
    st.markdown("### ЁЯФв р╕Ир╕▒р╕Фр╕нр╕▒р╕Щр╕Фр╕▒р╕Ър╕Хр╕▓р╕бр╕Ир╕│р╕Щр╕зр╕Щр╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф")
    st.dataframe(df_sorted_total, use_container_width=True)

    df_sorted_success = df_summary.sort_values(by="% р╕Бр╕▓р╕гр╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕кр╕│р╣Ар╕гр╣Зр╕И", ascending=False)
    st.markdown("### тЬЕ р╕Ир╕▒р╕Фр╕нр╕▒р╕Щр╕Фр╕▒р╕Ър╕Хр╕▓р╕б % р╕Бр╕▓р╕гр╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕кр╕│р╣Ар╕гр╣Зр╕И")
    st.dataframe(df_sorted_success, use_container_width=True)

    # Checkbox р╕кр╕│р╕лр╕гр╕▒р╕Ър╣Ар╕ер╕╖р╕нр╕Б "р╣Бр╕кр╕Фр╕Зр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф"
    show_all = st.checkbox("тЬЕ р╣Бр╕кр╕Фр╕Зр╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣Мр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф", value=False)

    if show_all:
        # р╕Цр╣Йр╕▓р╣Ар╕ер╕╖р╕нр╕Бр╣Бр╕кр╕Фр╕Зр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф р╣Др╕бр╣Ир╕Хр╣Йр╕нр╕Зр╕Ир╕│р╕Бр╕▒р╕Фр╕Ир╕│р╕Щр╕зр╕Щ
        top_total = df_sorted_total
        top_success = df_sorted_success
    else:
        # р╕Цр╣Йр╕▓р╣Др╕бр╣Ир╣Ар╕ер╕╖р╕нр╕Бр╣Бр╕кр╕Фр╕Зр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф р╣Гр╕лр╣Йр╣Гр╕Кр╣Й slider р╣Ар╕ер╕╖р╕нр╕Б Top N
        top_n = st.slider("р╣Ар╕ер╕╖р╕нр╕Бр╕Ир╕│р╕Щр╕зр╕Щр╕нр╕▒р╕Щр╕Фр╕▒р╕Ър╕кр╕╣р╕Зр╕кр╕╕р╕Фр╕Чр╕╡р╣Ир╕Ир╕░р╣Бр╕кр╕Фр╕Зр╣Гр╕Щр╕Бр╕гр╕▓р╕Я", min_value=5, max_value=min(len(df_summary), 50), value=10)
        top_total = df_sorted_total.head(top_n)
        top_success = df_sorted_success.head(top_n)

    # р╕Бр╕гр╕▓р╕Яр╕гр╕зр╕бр╕Бр╕▓р╕гр╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
    fig_total = px.bar(top_total, x="Device", y="р╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф", text="р╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф",
                    title="ЁЯПЕ р╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣Мр╕Чр╕╡р╣Ир╕бр╕╡р╕Бр╕▓р╕гр╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕бр╕▓р╕Бр╕Чр╕╡р╣Ир╕кр╕╕р╕Ф")
    st.plotly_chart(fig_total, use_container_width=True)

    # р╕Бр╕гр╕▓р╕Я % р╕Бр╕▓р╕гр╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕кр╕│р╣Ар╕гр╣Зр╕И
    fig_success = px.bar(top_success, x="Device", y="% р╕Бр╕▓р╕гр╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕кр╕│р╣Ар╕гр╣Зр╕И", text="% р╕Бр╕▓р╕гр╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕кр╕│р╣Ар╕гр╣Зр╕И",
                        title="ЁЯПЕ р╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣Мр╕Чр╕╡р╣Ир╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕кр╕│р╣Ар╕гр╣Зр╕Ир╕кр╕╣р╕Зр╕кр╕╕р╕Ф (%)")
    st.plotly_chart(fig_success, use_container_width=True)

    # --- Download CSV ---
    csv = df_summary.to_csv(index=False).encode('utf-8-sig')
    st.download_button("тмЗя╕П р╕Фр╕▓р╕зр╕Щр╣Мр╣Вр╕лр╕ер╕Фр╕кр╕гр╕╕р╕Ыр╕нр╕▒р╕Щр╕Фр╕▒р╕Ъ (CSV)", csv, "command_summary.csv", "text/csv")
